#       Copyright 2020 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

#Deploy the pod
apiVersion: apps/v1
kind: Deployment
metadata:
  name: collector
  labels:
    app: stock-trader
  annotations:
    prism.subkind: Liberty
spec:
  replicas: 1
  selector:
    matchLabels:
      app: collector
  template:
    metadata:
      labels:
        app: collector
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "9080"
    spec:
      containers:
      - name: collector
#       image: collector:latest # Microservice Builder
#       image: mycluster.icp:8500/stock-trader/collector:latest # IBM Cloud Private
#       image: registry.ng.bluemix.net/stock_trader/collector:latest # IBM Kubernetes Service
        image: ibmstocktrader/collector:latest # Docker Hub
        env:
          - name: CLOUDANT_URL
            valueFrom:
              configMapKeyRef:
                name: test-config
                key: cloudant.url
          - name: CLOUDANT_DB
            valueFrom:
              configMapKeyRef:
                name: test-config
                key: cloudant.collector
          - name: CLOUDANT_ID
            valueFrom:
              secretKeyRef:
                name: test-credentials
                key: cloudant.id
          - name: CLOUDANT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: test-credentials
                key: cloudant.password
          - name: JWT_AUDIENCE
            valueFrom:
              configMapKeyRef:
                name: test-config
                key: jwt.audience
          - name: JWT_ISSUER
            valueFrom:
              configMapKeyRef:
                name: test-config
                key: jwt.issuer
          - name: STOCK_QUOTE_URL
            valueFrom:
              configMapKeyRef:
                name: urls
                key: stock-quote
                optional: true
          - name: WLP_LOGGING_CONSOLE_FORMAT
            value: DEV
          - name: WLP_LOGGING_CONSOLE_SOURCE
            value: message,ffdc
        ports:
          - containerPort: 9080
          - containerPort: 9443
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9080
          initialDelaySeconds: 90
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9080
          initialDelaySeconds: 120
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 5 # Allow a little time to exec into the pod to grab FFDCs before it's killed
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 250m
            memory: 256Mi
      #  Uncomment the following lines to get the keystore from the secret
#        volumeMounts:
#        - mountPath: /keystores
#          name: kafka-keystore-volume
#          readOnly: true
#      volumes:
#      - name: kafka-keystore-volume
#        secret:
#         secretName: kafka-keystore
---
#Deploy the service
apiVersion: v1
kind: Service
metadata:
  name: collector-service
  labels:
    app: collector
    solution: stock-trader
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9080"
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 9080
      targetPort: 9080
    - name: https
      protocol: TCP
      port: 9443
      targetPort: 9443
  selector:
    app: account

